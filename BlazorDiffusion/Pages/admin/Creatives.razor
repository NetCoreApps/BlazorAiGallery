@page "/admin/creatives"
@attribute [Authorize(Roles = "Admin")]
@inherits AuthBlazorComponentBase

@inject NavigationManager NavigationManager

<Breadcrumbs class="mb-8" HomeHref="/admin">
    <Breadcrumb>
        Creatives
    </Breadcrumb>
</Breadcrumbs>

<div>
  <div class="sm:hidden">
    <label for="tabs" class="sr-only">Select a tab</label>
    <!-- Use an "onChange" listener to redirect the user to the selected tab URL. -->
    <select id="tabs" name="tabs" class="block w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500">
      <option selected>Missing Primary Artifact</option>

      <option>Reported</option>
    </select>
  </div>
  <div class="hidden sm:block">
    <div class="border-b border-gray-200">
      <nav class="-mb-px flex space-x-8" aria-label="Tabs">
        <!-- Current: "border-indigo-500 text-indigo-600", Default: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300" -->
        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 group inline-flex items-center py-4 px-1 border-b-2 font-medium text-sm">
          <!--
            Heroicon name: mini/user

            Current: "text-indigo-500", Default: "text-gray-400 group-hover:text-gray-500"
          -->
          <svg class="text-gray-400 group-hover:text-gray-500 -ml-0.5 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path d="M10 8a3 3 0 100-6 3 3 0 000 6zM3.465 14.493a1.23 1.23 0 00.41 1.412A9.957 9.957 0 0010 18c2.31 0 4.438-.784 6.131-2.1.43-.333.604-.903.408-1.41a7.002 7.002 0 00-13.074.003z" />
          </svg>
          <span class="text-lg">Missing Primary Artifact</span>
        </a>

        <a href="#" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 group inline-flex items-center py-4 px-1 border-b-2 font-medium text-sm">
          <!-- Heroicon name: mini/building-office -->
          <svg class="text-gray-400 group-hover:text-gray-500 -ml-0.5 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M4 16.5v-13h-.25a.75.75 0 010-1.5h12.5a.75.75 0 010 1.5H16v13h.25a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75v-2.5a.75.75 0 00-.75-.75h-2.5a.75.75 0 00-.75.75v2.5a.75.75 0 01-.75.75h-3.5a.75.75 0 010-1.5H4zm3-11a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zM7.5 9a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1zM11 5.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zm.5 3.5a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1z" clip-rule="evenodd" />
          </svg>
          <span class="text-lg">Reported</span>
        </a>
      </nav>
    </div>
  </div>
</div>



<AutoQueryGrid Model="Creative" Apis="Apis.AutoQuery<QueryCreatives, UpdateCreative, HardDeleteCreative>()"
               @ref="autoQueryGrid"
               RowSelected="RowSelected"
               
               ConfigureQuery=@((x) => { x.AddQueryParam("PrimaryArtifactId", ""); })>
    <EditForm>
        @if (reviewItem != null)
        {
            <div class="relative z-10" aria-labelledby="slide-over-title" role="dialog" aria-modal="true">
                <div class="">
                    <div class="">
                        <div class="pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10 sm:pl-16">
                            <PrimaryArtifactSelection Creative="reviewItem" OnClose="Close" 
                                OnDelete="Delete" OnSave="Save"
                                EditPanelCss=@editPanelClass></PrimaryArtifactSelection>
                        </div>
                    </div>
                </div>
            </div>
        }

    </EditForm>
    <Columns>
        <Column Title="User" Field="(Creative x) => x.OwnerId"/>
        <Column Title="Id" Field="(Creative x) => x.Id"/>
        <Column Field="(Creative x) => x.Modifiers">
            <Template>
                @if (context.Modifiers?.Count > 0)
                {
                    <TextLink class="flex" href=@($"/admin/modifiers?Ids={string.Join(",", context.Modifiers.Select(x => x.ModifierId))}")>
                        <Icon class="w-6 h-6 mr-1" Image=@typeof(Modifier).GetIcon()/>
                        @TextUtils.Pluralize("Modifier", context.Modifiers)
                    </TextLink>
                }
            </Template>
        </Column>
        <Column Field="(Creative x) => x.Artists">
            <Template>
                @if (context.Artists?.Count > 0)
                {
                    <TextLink class="flex" href=@($"/admin/artists?Ids={string.Join(",", context.Artists.Select(x => x.ArtistId))}")>
                        <Icon class="w-6 h-6 mr-1" Image=@typeof(Artist).GetIcon()/>
                        @TextUtils.Pluralize("Artist", context.Artists)
                    </TextLink>
                }
            </Template>
        </Column>
        <Column Field="(Creative x) => x.Artifacts">
            <Template>
                @if (context.Artifacts?.Count > 0)
                {
                    <TextLink class="flex" href=@($"/admin/artifacts?CreativeId={context.Id}")>
                        <Icon class="w-6 h-6 mr-1" Image=@typeof(Artifact).GetIcon()/>
                        @TextUtils.Pluralize("Artifact", context.Artifacts)
                    </TextLink>
                }
            </Template>
        </Column>
        <Column Field="(Creative x) => x.Key"/>
        <Column Field="(Creative x) => x.CreatedDate" Format="s"/>
        <Column Field="(Creative x) => x.UserPrompt"/>
    </Columns>
</AutoQueryGrid>

@code {

    [Parameter, SupplyParameterFromQuery]
    public string? Edit { get; set; }

    public Creative reviewItem = null;
    AutoQueryGrid<Creative> autoQueryGrid;

    string editPanelClass = "show";


    async Task RowSelected(Creative item)
    {
        reviewItem = item;
        editPanelClass = "show";
        StateHasChanged();
    }

    async Task Close()
    {
        editPanelClass = "hidden";
        reviewItem = null;
    }

    async Task Save()
    {
        await Task.Delay(500);
        await autoQueryGrid.RefreshAsync();
    }

    async Task Delete()
    {
        await Task.Delay(500);
        await autoQueryGrid.RefreshAsync();
    }

}