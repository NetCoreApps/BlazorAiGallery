@page "/create"
@attribute [Authorize]
@inherits AppAuthComponentBase


<Home>
    <form class="mt-4 mx-auto shadow overflow-hidden sm:rounded-md w-[450px] sm:w-[600px]" @onsubmit="noop" @onsubmit:preventDefault>
    <CascadingValue Value=@api.Error>
        <ErrorSummary Except=@VisibleFields />

        <div class="px-4 space-y-6 sm:p-6">
            <div class="flex justify-center">
                <div @onclick="_ => selectImageSize(ImageSize.Square)" class=@CssUtils.ClassNames("mr-4 flex flex-col items-center hover:text-gray-700 dark:hover:text-gray-300 cursor-pointer", imageSize == ImageSize.Square ? "text-gray-900 dark:text-gray-100" : "text-gray-400")>
                    <svg class="w-12 h-12" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid meet" viewBox="0 0 48 48"><path fill="currentColor" fill-rule="evenodd" d="M14 14v20h20V14H14Zm-1-2a1 1 0 0 0-1 1v22a1 1 0 0 0 1 1h22a1 1 0 0 0 1-1V13a1 1 0 0 0-1-1H13Z" clip-rule="evenodd" /></svg>
                    <span class="text-sm">square</span>
                </div>
                <div @onclick="_ => selectImageSize(ImageSize.Portrait)" class=@CssUtils.ClassNames("mr-4 flex flex-col items-center hover:text-gray-700 dark:hover:text-gray-300 cursor-pointer", imageSize == ImageSize.Portrait ? "text-gray-900 dark:text-gray-100" : "text-gray-400")>
                    <svg class="w-12 h-12" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid meet" viewBox="0 0 21 21"><g fill="none" fill-rule="evenodd" transform="translate(5 3)"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M2.5.5h6a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2z" /><circle cx="5.5" cy="11.5" r="1" fill="currentColor" /></g></svg>
                    <span class="text-sm">portrait</span>
                </div>
                <div @onclick="_ => selectImageSize(ImageSize.Landscape)" class=@CssUtils.ClassNames("flex flex-col items-center hover:text-gray-700 dark:hover:text-gray-300 cursor-pointer", imageSize == ImageSize.Landscape ? "text-gray-900 dark:text-gray-100" : "text-gray-400")>
                    <svg class="w-12 h-12 rotate-90" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid meet" viewBox="0 0 21 21"><g fill="none" fill-rule="evenodd" transform="translate(5 3)"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M2.5.5h6a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2z" /><circle cx="5.5" cy="11.5" r="1" fill="currentColor" /></g></svg>
                    <span class="text-sm">landscape</span>
                </div>
            </div>
        </div>

        @if (DataCache != null)
        {
            <div class="mx-auto w-[440px]">
                <Autocomplete Id="ArtistIds" Options="ArtistOptions" Multiple=true @bind-Values="artists" placeholder="Select Artist Style"
                    Match="(x, value) => x.Name.Contains(value, StringComparison.OrdinalIgnoreCase) ||
                                         x.Type?.Contains(value, StringComparison.OrdinalIgnoreCase) == true">
                    <Item>
                        <div class="flex justify-between">
                            <span class="truncate">@context!.Name</span>
                            <span class="text-gray-400 truncate -mr-6">@context!.Type</span>
                        </div>
                    </Item>
                </Autocomplete>
            </div>

            @if (artists.Count > 0)
            {
                <div class="m-4 flex flex-wrap">
                @foreach (var artist in artists)
                {
                    <div @key=@artist.Id class="pt-2 pr-2">
                        <span class="inline-flex rounded-full items-center py-0.5 pl-2.5 pr-1 text-sm font-medium bg-indigo-100 dark:bg-indigo-800 text-indigo-700 dark:text-indigo-300">
                            @artist.Name
                            <button type="button" @onclick="_ => removeArtist(artist)" class="flex-shrink-0 ml-2 h-4 w-4 rounded-full inline-flex items-center justify-center text-indigo-400 dark:text-indigo-500 hover:bg-indigo-200 dark:hover:bg-indigo-800 hover:text-indigo-500 dark:hover:text-indigo-400 focus:outline-none focus:bg-indigo-500 focus:text-white dark:focus:text-black">
                                <svg class="h-2 w-2" stroke="currentColor" fill="none" viewBox="0 0 8 8"><path stroke-linecap="round" stroke-width="1.5" d="M1 1l6 6m0-6L1 7"></path></svg>
                            </button>
                        </span>
                    </div>
                }
                </div>
            }

            <div class="mt-8 mx-auto w-[440px]">
                <Autocomplete Id="ModifierIds" Options="ModifierOptions" Multiple=true @bind-Values="modifiers" placeholder="Select Modifiers"
                    Match="(x, value) => x.Name.Contains(value, StringComparison.OrdinalIgnoreCase) ||
                                         x.Category.Contains(value, StringComparison.OrdinalIgnoreCase)">
                    <Item>
                        <div class="flex justify-between">
                            <span class="truncate">@context!.Name</span>
                            <span class="text-gray-400 truncate -mr-6">@context!.Category</span>
                        </div>
                    </Item>
                </Autocomplete>
            </div>

            @if (modifiers.Count > 0)
            {
                <div class="m-4 flex flex-wrap">
                @foreach (var modifier in modifiers)
                {
                    <div @key=@modifier.Id class="pt-2 pr-2">
                        <span class="inline-flex rounded-full items-center py-0.5 pl-2.5 pr-1 text-sm font-medium bg-indigo-100 dark:bg-indigo-800 text-indigo-700 dark:text-indigo-300">
                            @modifier.Name
                            <button type="button" @onclick="_ => removeModifier(modifier)" class="flex-shrink-0 ml-2 h-4 w-4 rounded-full inline-flex items-center justify-center text-indigo-400 dark:text-indigo-500 hover:bg-indigo-200 dark:hover:bg-indigo-800 hover:text-indigo-500 dark:hover:text-indigo-400 focus:outline-none focus:bg-indigo-500 focus:text-white dark:focus:text-black">
                                <svg class="h-2 w-2" stroke="currentColor" fill="none" viewBox="0 0 8 8"><path stroke-linecap="round" stroke-width="1.5" d="M1 1l6 6m0-6L1 7"></path></svg>
                            </button>
                        </span>
                    </div>
                }
                </div>
            }

            <div class="mt-8">
                <div class="sm:hidden">
                    <label for="groups" class="sr-only">Select a tab</label>
                    <select id="groups" name="tabs" class="block w-full dark:bg-black rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500" onchange="addModifier">
                    @foreach (var group in DataCache.CategoryGroups)
                    {
                        <option @key=@group.Name>@group.Name</option>
                    }
                    </select>
                </div>
                <div class="hidden sm:block">
                    <div class="border-b border-gray-200 dark:border-gray-800">
                        <nav class="-mb-px flex" aria-label="Tabs">
                        @foreach (var group in DataCache.CategoryGroups)
                        {
                            <buton @key=@group.Name @onclick="_ => selectGroup(group.Name)" class=@CssUtils.ClassNames(group.Name == selectedGroup
                                ? "border-indigo-500 dark:border-gray-100 text-indigo-600 dark:text-gray-100" : "border-transparent text-gray-500 hover:text-gray-500 dark:hover:text-gray-400 hover:border-gray-300 dark:hover:border-gray-500",
                                "cursor-pointer w-1/4 py-4 px-1 text-center border-b-2 font-medium text-sm")>@group.Name</buton>
                        }
                        </nav>
                    </div>
                </div>
            </div>

            <div class="flex">
                <div class="md:inset-y-0 md:flex md:w-[8.5rem] shrink-0">
                    <div class="flex min-h-0 flex-1 flex-col bg-white dark:bg-gray-800">
                        <div class="flex flex-1 flex-col overflow-y-auto">
                            <nav class="flex-1 space-y-1 px-2 py-4">
                            @foreach (var category in groupCategories)
                            {
                                <button @key=@category @onclick="_ => selectCategory(category)" class=@CssUtils.ClassNames(category == selectedCategory
                                    ? "bg-gray-100 dark:bg-gray-900 text-black dark:text-white"
                                    : "text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-black dark:hover:text-white",
                                    "w-full group flex items-center px-2 py-2 text-sm font-medium rounded-md")>
                                    @category
                                </button>
                            }
                            </nav>
                        </div>
                    </div>
                </div>
                <div class="flex grow p-2">
                    <div>
                        <div class="grid grid-cols-3 gap-2">
                        @foreach (var modifier in categoryModifiers)
                        {
                            <span @key=@modifier.Id @onclick="_ => addModifier(modifier)" class="text-sm text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100 cursor-pointer">@modifier.Name</span>
                        }
                        </div>
                    </div>
                </div>
            </div>
        }

        <div class="mt-4 p-2 flex flex-col gap-y-4">
            <TextInput class="!text-lg" @bind-Value="request.UserPrompt" spellcheck="false" Placeholder="Description of Image" Label="" />
        </div>

        <div class="my-8 text-right">
            <div class="flex justify-center">
                <PrimaryButton @onclick="submit" Style="ButtonStyle.Sky" class="!rounded-full text-lg font-normal">
                    Generate
                </PrimaryButton>
            </div>
        </div>
    </CascadingValue>
    </form>

    <div class="mt-8 mb-40">
        @if (api.IsLoading)
        {
            <div class="flex justify-center">
                <Loading class="text-gray-300 font-normal" ImageClass="w-7 h-7 mt-1.5" Message="generating images..." />
            </div>
        }
        else if (creative != null)
        {
            <div class="flex flex-wrap flex justify-evenly">
                @foreach (var artifact in creative.Artifacts)
            {
                <div class="p-2 flex flex-col cursor-pointer w-60 sm:w-80">
                    <img class="rounded-lg" src=@artifact.FilePath alt=@artifact.FileName
                         width=@artifact.Width height=@artifact.Height />
                        <div class="flex justify-between">
                        <span class="m-2 text-sm text-gray-600 dark:text-gray-400">@artifact.Height x @artifact.Width</span>
                        <span class="m-2 text-sm text-gray-600 dark:text-gray-400">@TextUtils.FormatBytes(artifact.ContentLength)</span>
                    </div>
                </div>
            }
            </div>
        }
    </div>
</Home>


<div class="z-10 absolute top-16 right-2 -mt-2">
    <div class="flex flex-col">
    @if (apiHistory?.Response?.Results.Count > 0)
    {
        <div class="text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-100">
            <div class="group cursor-pointer" @onclick="_ => toggleMenu(CreateMenu.History)">
                <svg class="w-8 h-8" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="currentColor" d="M19.5 12A7.5 7.5 0 0 0 6.9 6.5h1.35a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75v-3a.75.75 0 0 1 1.5 0v1.042a9 9 0 1 1-2.895 5.331a.749.749 0 0 1 .752-.623c.46 0 .791.438.724.892A7.5 7.5 0 1 0 19.5 12Zm-7-4.25a.75.75 0 0 0-1.5 0v4.5c0 .414.336.75.75.75h2.5a.75.75 0 0 0 0-1.5H12.5V7.75Z" /></svg>
                <span class="block -mt-0.5 text-xs invisible group-hover:visible">history</span>
            </div>
        </div>
    }
    </div>
</div>

@if (createMenu == CreateMenu.History && apiHistory?.Response?.Results.Count > 0)
{
    <div class="rounded-md absolute top-12 mt-2 right-12 shadow bg-white dark:bg-black flex flex-col z-10 p-2">
        <nav class="space-y-1" aria-label="Sidebar">
        @foreach (var item in apiHistory.Response.Results)
        {
            <NavLink href=@($"/create?Id={item.Id}") class=@ClassNames("flex items-center px-3 py-2 text-sm font-medium", Id == item.Id
                ? "bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100"
                : "text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100")>
                <span class="w-40 truncate" title=@item.UserPrompt>@item.UserPrompt</span>
            </NavLink>
        }
        </nav>
    </div>
}
