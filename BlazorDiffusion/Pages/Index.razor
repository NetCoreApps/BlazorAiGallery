@page "/"
@inject NavigationManager NavigationManager

<div class="overflow-hidden absolute w-full left-0 -mt-6">
    <div class="py-16 sm:px-2 lg:relative lg:py-20 lg:px-0">
        <div class="mx-auto">
            <div class="relative z-10  flex justify-center">
                <img alt="" src="/img/blur-cyan.png" width="530" height="530" decoding="async" data-nimg="future" class="absolute bottom-full right-full -mr-72 -mb-56 opacity-50" style="color:transparent">
            </div>
        </div>
    </div>
    <div class="relative lg:static xl:pl-10" style="height:300px">
        <div class="absolute inset-x-[-50vw] [mask-image:linear-gradient(transparent,white,white)] dark:[mask-image:linear-gradient(transparent,white,transparent)] lg:left-[calc(50%+14rem)] lg:right-0 lg:-top-32 lg:-bottom-32 lg:[mask-image:none] lg:dark:[mask-image:linear-gradient(white,white,transparent)]">
            <img class="absolute top-1/2 left-1/2 -translate-y-1/2 -translate-x-1/2 lg:left-0 lg:translate-x-0 lg:translate-y-[-60%]" src="/img/bg-body.svg" />
        </div>
        <div class="relative">
            <img alt="" src="/img/blur-cyan.png" width="530" height="530" decoding="async" data-nimg="future" class="absolute -top-64 -right-64" style="color:transparent;/* display: none; */"><img alt="" src="/_next/static/media/blur-indigo.b752cf77.png" width="567" height="567" decoding="async" data-nimg="future" class="absolute -bottom-40 -right-44" style="color:transparent;display:none;">
        </div>
    </div>
</div>

<div class="">
    <div class="py-16 sm:px-2 lg:relative lg:py-20 lg:px-0">
        <div class="mx-auto">
            <div class="relative z-10 flex justify-center">
                <div class="relative">
                    <p class="inline bg-gradient-to-r from-indigo-200 via-sky-400 to-indigo-200 bg-clip-text font-display text-5xl tracking-tight text-transparent">Blazor Diffusion</p>
                    <p class="mt-3 text-2xl tracking-tight text-slate-400">
                        Stable Diffusion Image Search
                    </p>
                    <div class="mt-8 flex gap-4 justify-center">
                        @if (!browse) {
                            <PrimaryButton @onclick="navToSearch" class="!rounded-full py-2 px-4" Style="ButtonStyle.Sky">Search</PrimaryButton>
                            <SecondaryButton @onclick="navToBrowse" class="!rounded-full py-2 px-4">Browse</SecondaryButton>
                        }
                        else
                        {
                            <SecondaryButton @onclick="navToSearch" class="!rounded-full py-2 px-4">Search</SecondaryButton>
                            <PrimaryButton @onclick="navToBrowse" class="!rounded-full py-2 px-4" Style="ButtonStyle.Sky">Browse</PrimaryButton>
                        }
                    </div>
                </div>
            </div>

        @if (search)
        {
            <div class="mt-8 mx-auto shadow overflow-hidden sm:rounded-md w-[450px] sm:w-[600px]">
                <ErrorSummary Except=@VisibleFields />

                <div class="px-4 py-5 space-y-6 sm:p-6">
                    <div class="flex flex-col gap-y-4">
                        <TextInput @bind-Value="request.UserPrompt" spellcheck="false" Placeholder="Description of Image" Label="" />
                    </div>
                    <div class="flex justify-center">
                        <div @onclick="_ => selectImageSize(ImageSize.Square)" class=@CssUtils.ClassNames("mr-4 flex flex-col items-center hover:text-gray-700 dark:hover:text-gray-300 cursor-pointer", imageSize == ImageSize.Square ? "text-gray-900 dark:text-gray-100" : "text-gray-400")>
                            <svg class="w-12 h-12" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid meet" viewBox="0 0 48 48"><path fill="currentColor" fill-rule="evenodd" d="M14 14v20h20V14H14Zm-1-2a1 1 0 0 0-1 1v22a1 1 0 0 0 1 1h22a1 1 0 0 0 1-1V13a1 1 0 0 0-1-1H13Z" clip-rule="evenodd"/></svg>
                            <span class="text-sm">square</span>
                        </div>
                        <div @onclick="_ => selectImageSize(ImageSize.Portrait)" class=@CssUtils.ClassNames("mr-4 flex flex-col items-center hover:text-gray-700 dark:hover:text-gray-300 cursor-pointer", imageSize == ImageSize.Portrait ? "text-gray-900 dark:text-gray-100" : "text-gray-400")>
                            <svg class="w-12 h-12" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid meet" viewBox="0 0 21 21"><g fill="none" fill-rule="evenodd" transform="translate(5 3)"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M2.5.5h6a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2z"/><circle cx="5.5" cy="11.5" r="1" fill="currentColor"/></g></svg>
                            <span class="text-sm">portrait</span>
                        </div>
                        <div @onclick="_ => selectImageSize(ImageSize.Landscape)" class=@CssUtils.ClassNames("flex flex-col items-center hover:text-gray-700 dark:hover:text-gray-300 cursor-pointer", imageSize == ImageSize.Landscape ? "text-gray-900 dark:text-gray-100" : "text-gray-400")>
                            <svg class="w-12 h-12 rotate-90" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid meet" viewBox="0 0 21 21"><g fill="none" fill-rule="evenodd" transform="translate(5 3)"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M2.5.5h6a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2z"/><circle cx="5.5" cy="11.5" r="1" fill="currentColor"/></g></svg>
                            <span class="text-sm">landscape</span>
                        </div>
                    </div>
                </div>

                @if (DataCache != null)
                {
                    <div class="flex gap-y-4 justify-center">
                        <ComboBox Options="ArtistOptions" Selected="addArtist" Exclude="x => artists.Any(m => x.Key == m.Key)" placeholder="Select Artist Style" />
                    </div>

                    @if (artists.Count > 0)
                    {
                        <div class="m-4 flex flex-wrap">
                        @foreach (var artist in artists)
                        {
                            <div @key=@artist.Key class="pt-2 pr-2">
                                <span class="inline-flex rounded-full items-center py-0.5 pl-2.5 pr-1 text-sm font-medium bg-indigo-100 dark:bg-indigo-800 text-indigo-700 dark:text-indigo-300">
                                    @artist.Value
                                    <button type="button" @onclick="_ => removeArtist(artist)" class="flex-shrink-0 ml-2 h-4 w-4 rounded-full inline-flex items-center justify-center text-indigo-400 dark:text-indigo-500 hover:bg-indigo-200 dark:hover:bg-indigo-800 hover:text-indigo-500 dark:hover:text-indigo-400 focus:outline-none focus:bg-indigo-500 focus:text-white dark:focus:text-black">
                                        <svg class="h-2 w-2" stroke="currentColor" fill="none" viewBox="0 0 8 8"><path stroke-linecap="round" stroke-width="1.5" d="M1 1l6 6m0-6L1 7"></path></svg>
                                    </button>
                                </span>
                            </div>
                        }
                        </div>
                    }

                    <div class="mt-8 flex gap-y-4 justify-center">
                        <ComboBox Options="ModifierOptions" Selected="addModifier" Exclude="x => modifiers.Any(m => x.Key == m.Key)" placeholder="Select Modifiers" />
                    </div>

                    @if (modifiers.Count > 0)
                    {
                        <div class="m-4 flex flex-wrap">
                        @foreach (var modifier in modifiers)
                        {
                            <div @key=@modifier.Key class="pt-2 pr-2">
                                <span class="inline-flex rounded-full items-center py-0.5 pl-2.5 pr-1 text-sm font-medium bg-indigo-100 dark:bg-indigo-800 text-indigo-700 dark:text-indigo-300">
                                    @modifier.Value
                                    <button type="button" @onclick="_ => removeModifier(modifier)" class="flex-shrink-0 ml-2 h-4 w-4 rounded-full inline-flex items-center justify-center text-indigo-400 dark:text-indigo-500 hover:bg-indigo-200 dark:hover:bg-indigo-800 hover:text-indigo-500 dark:hover:text-indigo-400 focus:outline-none focus:bg-indigo-500 focus:text-white dark:focus:text-black">
                                        <svg class="h-2 w-2" stroke="currentColor" fill="none" viewBox="0 0 8 8"><path stroke-linecap="round" stroke-width="1.5" d="M1 1l6 6m0-6L1 7"></path></svg>
                                    </button>
                                </span>
                            </div>
                        }
                        </div>
                    }

                    <div class="mt-8">
                      <div class="sm:hidden">
                        <label for="groups" class="sr-only">Select a tab</label>
                        <select id="groups" name="tabs" class="block w-full dark:bg-black rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500" onchange="addModifier">
                        @foreach (var group in DataCache.CategoryGroups)
                        {
                            <option @key=@group.Name>@group.Name</option>
                        }
                        </select>
                      </div>
                      <div class="hidden sm:block">
                        <div class="border-b border-gray-200 dark:border-gray-800">
                          <nav class="-mb-px flex" aria-label="Tabs">
                            @foreach (var group in DataCache.CategoryGroups)
                            {
                                <buton @key=@group.Name @onclick="_ => selectGroup(group.Name)" class=@CssUtils.ClassNames(group.Name == selectedGroup
                                    ? "border-indigo-500 dark:border-gray-100 text-indigo-600 dark:text-gray-100" : "border-transparent text-gray-500 hover:text-gray-500 dark:hover:text-gray-400 hover:border-gray-300 dark:hover:border-gray-500",
                                   "cursor-pointer w-1/4 py-4 px-1 text-center border-b-2 font-medium text-sm")>@group.Name</buton>
                            }
                          </nav>
                        </div>
                      </div>
                    </div>

                    <div class="flex">
                        <div class="md:inset-y-0 md:flex md:w-[8.5rem] shrink-0">
                            <div class="flex min-h-0 flex-1 flex-col bg-white dark:bg-gray-800">
                                <div class="flex flex-1 flex-col overflow-y-auto">
                                    <nav class="flex-1 space-y-1 px-2 py-4">
                                    @foreach (var category in groupCategories)
                                    {
                                        <button @key=@category @onclick="_ => selectCategory(category)" class=@CssUtils.ClassNames(category == selectedCategory
                                            ? "bg-gray-100 dark:bg-gray-900 text-black dark:text-white"
                                            : "text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-black dark:hover:text-white",
                                            "w-full group flex items-center px-2 py-2 text-sm font-medium rounded-md")>
                                            @category
                                        </button>
                                    }
                                    </nav>
                                </div>
                            </div>
                        </div>
                        <div class="flex grow p-2">
                            <div>
                                <div class="grid grid-cols-3 gap-2">
                                    @foreach (var modifier in categoryModifiers)
                                    {
                                        <span @key=@modifier.Key @onclick="_ => addModifier(modifier)" class="text-sm text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100 cursor-pointer">@modifier.Value</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <div class="my-8 text-right">
                    <div class="flex justify-center">
                        <PrimaryButton type="submit" Style="ButtonStyle.Sky" class="!rounded-full text-lg font-normal">
                            Search
                        </PrimaryButton>
                    </div>
                </div>
            </div>
        }

        </div>
    </div>
</div>
